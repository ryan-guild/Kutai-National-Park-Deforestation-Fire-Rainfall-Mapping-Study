//KNP Shapefile obtained from protectedplanet.net & named "kutai"//
//1. IMPORT AND ADD KNP BOUNDARY TO MAP//
Map.addLayer(kutai, {}, 'Kutai shp')

//2. CALK THE DATASET
var dataset = ee.Image('UMD/hansen/global_forest_change_2021_v1_9');
Map.centerObject(knp)

//2. Display tree cover in year 2000
var treeCoverVisParam = {
  bands: ['treecover2000'],
  min: 0,
  max: 100,
  palette: ['black', 'green']
};
Map.addLayer(dataset.clip(knp), treeCoverVisParam, 'tree cover');

//3. DISPLAY LOSS PER YEAR (2001-2021)
var treeLossVisParam = {
  bands: ['lossyear'],
  min: 1,
  max: 21,
  palette: ['0D0887', '5B02A3', '9A179B', 'CB4678', 'EB7852', 'FBB32F', '80ced6']
};
Map.addLayer(dataset.clip(knp), treeLossVisParam, 'tree loss year');

//4. CALCULATE LOSS PER YEAR IN A DICTIONARY
var lossYear = dataset.select(['lossyear']);
var statsFormatted = lossYear.reduceRegion({
  reducer: ee.Reducer.frequencyHistogram(),
  geometry: knp,
  scale: 30,
  crs: 'EPSG:32650'
}).get('lossyear');
var statsDictionary = ee.Dictionary(statsFormatted);
print(statsDictionary);

//5. SPECIFY X AND Y LABELS IN DICTIONARY
var years = statsDictionary.keys()
                          .map(function(year){
                            return ee.Number.parse(year)});

var loss = statsDictionary.values(statsDictionary.keys())
                          .map(function(numberLossPixels){
                            return ee.Number(numberLossPixels).multiply(900).divide(1e6)});

//6. CHART THE DICTIONARY
//Using ui.Chart.array.values() which takes a list of input values and a list of labels for the x axis
var chart = ui.Chart.array.values(loss, 0, years)
            .setChartType('ColumnChart')
            .setOptions({
              title: 'Yearly Forest Loss in KNP',
              hAxis: {title: 'Year', format: '####'},
              vAxis: {title: 'Loss area (sq kilometers)'},
              legend: {position: 'none'},
              lineWidth: 1,
              pointSize: 3
             });
print(chart);

//7. EXPORT LOSS IMAGE
Export.image.toDrive({
  image: lossYear.clip(knp),
  description: 'Loss by year',
  scale: 30,
  crs: 'EPSG:4326',
  region: knp
})
